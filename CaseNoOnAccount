//**Requirement**// When a Case is created on any Account, put the latest case number on the Account in the ‘Latest Case Number’ field.

// Trigger on Case object for after insert event
trigger CaseTrigger on Case (after insert) {
    // Check if the trigger event is after insert
    if(Trigger.isInsert && Trigger.isAfter){
        // Call the handler method to update the 'Latest Case Number' field on the related Account
        CaseTriggerHandler.populateLatestCaseNum(Trigger.New);
    }
}

public class CaseTriggerHandler {
    // Method to update the 'Latest Case Number' field on the related Account when a new Case is created
    public static void populateLatestCaseNum(List<Case> caseList){
        try {
            List<Account> accList = new List<Account>();
            
            // Loop through the list of cases
            for(Case cs : caseList){
                // Check if the Case is related to an Account
                if(cs.AccountId != null){
                    Account acc = new Account();
                    acc.id = cs.AccountId;
                    acc.Latest_Case_Number__c = cs.CaseNumber;
                    accList.add(acc);
                }
            }
            
            // Check if there are any Accounts to update
            if(!accList.isEmpty()){
                // Use Database.update for bulk DML operations
                Database.SaveResult[] srList = Database.update(accList, false);
                
                // Iterate through each returned result
                for (Database.SaveResult sr : srList) {
                    if (sr.isSuccess()) {
                        // Operation was successful, so get the ID of the record that was processed
                        System.debug('Successfully updated Account. Account ID: ' + sr.getId());
                    }
                    else {
                        // Operation failed, so get all errors                
                        for(Database.Error err : sr.getErrors()) {
                            System.debug('The following error has occurred.');                    
                            System.debug(err.getStatusCode() + ': ' + err.getMessage());
                            System.debug('Account fields that affected this error: ' + err.getFields());
                        }
                    }
                }
            }
        } catch(Exception e) {
            // Log the error and handle it appropriately
            System.debug('Error: ' + e.getMessage());
        }
    }
}
